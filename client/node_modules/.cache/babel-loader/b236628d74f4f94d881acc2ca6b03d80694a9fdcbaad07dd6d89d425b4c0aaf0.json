{"ast":null,"code":"import _regeneratorRuntime from\"/home/dev/Desktop/node-started/NASA-PROJECT/clients/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/dev/Desktop/node-started/NASA-PROJECT/clients/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var API_URL='http://localhost:8000';// TODO: Once API is ready.\n// Load planets and return as JSON.\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// TODO: Once API is ready.\n// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var responce;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:responce=_context.sent;_context.next=5;return responce.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}// TODO: Once API is ready.\n// Submit given launch data to launch system.\nfunction _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var responce,fetchedLaunches;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:responce=_context2.sent;_context2.next=5;return responce.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(launch){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URL","httpGetPlanets","_httpGetPlanets","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responce","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","abrupt","stop","httpGetLaunches","_httpGetLaunches","_callee2","fetchedLaunches","_callee2$","_context2","sort","a","b","flightNumber","httpSubmitLaunch","_x","_httpSubmitLaunch","_callee3","launch","_callee3$","_context3","method","headers","body","JSON","stringify","t0","ok","httpAbortLaunch","_x2","_httpAbortLaunch","_callee4","id","_callee4$","_context4"],"sources":["/home/dev/Desktop/node-started/NASA-PROJECT/clients/src/hooks/requests.js"],"sourcesContent":["const API_URL = 'http://localhost:8000';\n\n// TODO: Once API is ready.\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n   const responce = await fetch(`${API_URL}/planets`)\n   return await responce.json();\n  }\n\n\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n    const responce = await fetch(`${API_URL}/launches`);\n    const fetchedLaunches = await responce.json();\n    return fetchedLaunches.sort((a, b)=>{\n      return a.flightNumber - b.flightNumber;\n    })\n}\n\n// TODO: Once API is ready.\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n\n  try {\n    return await fetch(`${API_URL}/launches`,{\n       method:\"post\",\n       headers:{\n         \"Content-Type\":\"application/json\",\n       },\n       body:JSON.stringify(launch),\n     })\n  } catch (error) {\n    return{\n      ok:false,\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}